pom.xml

여기에 추가하는 이유는 maven 서버에서 라이브러리 버전을 가져오려고 추가하는 것이다.

[학원 setting]

# pom.xml

Java 1.8
Springframework 4.3.25.RELEASE
aspecij 1.9.4
slf4j 1.7.25

servlet-api 3.1.0

javax.servlet.jsp-api 2.3.1

<artifactId>jstl</artifactId>
<version>1.2</version>

<artifactId>junit</artifactId>
<version>4.12</version>

---- 새로 추가하는 것들 ---- [pom.xml 에서 db oracle mybatis mybatis-spring json2 라이브러리 추가]

-- DB Setting
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${org.springframework-version}</version>
	</dependency>
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.4</version>
	</dependency>

-- Oracle Driver Setting
	<dependency>
		<groupId>com.oracle</groupId>
		<artifactId>OracleDriver</artifactId>
		<version>11.2.0.4.0</version>
		<scope>system</scope>
		<systemPath>${basedir}/src/main/webapp/WEB-INF/lib/ojdbc6.jar</systemPath>
	</dependency>

-- myBatis Setting
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.4.6</version>
	</dependency>

-- myBatis와 스프링을 연동하기 위한 라이브러리
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>1.3.2</version>
	</dependency>

-- json2
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-core</artifactId>
	    <version>2.9.8</version>
	</dependency>
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	    <version>2.9.8</version>
	</dependency>
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-annotations</artifactId>
	    <version>2.9.8</version>
	</dependency>

플러그인

<artifactId>maven-compiler-plugin</artifactId>
<version>3.7.0</version>

<artifactId>exec-maven-plugin</artifactId>
<version>1.6.0</version>


##### 서버의 xml 파일

# server.xml

커넥터 태그에서
8080을 80으로,
끝에 URIEncoding="UTF-8" 추가

# web.xml

Ctrl + f
encoding 검색하고
갤러리에 있는거 주석 두 개 삭제


##### root-context.xml

컨텍스트에서 데이터베이스 접속

	<!-- myBatis 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="username" value="koitt" />
		<property name="password" value="koitt" />
		<property name="maxActive" value="8" />
	</bean>
	
	<!-- muBatis 환경 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/resources/mybatis-config.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- daoContext 임포트 -->
	<import resource="appServlet/daoContext.xml" />	